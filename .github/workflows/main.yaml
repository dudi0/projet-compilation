# On teste automatiquement
# le code ANTLR4.

name: CI
on:  push
jobs:
  test-code:
    name: Teste Calculette.g4
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
    
    - name: Test d'expressions simples
      run: |
            cd .
            
            # ---------------- Fonctions ----------------
            function initialisation () {
                export CLASSPATH=.:tools/antlr-4.9.2-complete.jar:tools/mvap/MVaP.jar:$CLASSPATH
                
                cd tools/mvap
                jar cfm MVaP.jar META-INF/MANIFEST.MF *.class
                cd ../..
            }
            
            function antlr4 () {
                java -Xmx500M -cp "tools/antlr-4.9.2-complete.jar:$CLASSPATH" org.antlr.v4.Tool $@
            }

            function grun () {
                java -Xmx500M -cp "tools/antlr-4.9.2-complete.jar:$CLASSPATH" org.antlr.v4.gui.TestRig $@
            }

            function compileMVAP () {
                java -cp $CLASSPATH MVaPAssembler $@
            }

            function execMVAP () {
                java -jar tools/mvap/MVaP.jar $@
            }
            
            
            function mvap () {
                cd .
                
                initialisation
                
                antlr4 Calculette.g4                
                javac *.java
                
                expr="$1"
                
                echo "$expr" | grun Calculette 'start' > fichier.mvap
                
                compileMVAP fichier.mvap
                
                execMVAP fichier.mvap.cbap
            }
            
            function test ($line) {
                ### Cette fonction teste une expression
                # D'abord l'expression
                # Puis la valeur attendue
                

                let "nb_tests+=1"
                
                expr=$line
                echo $line #l√† on n'a plus toute la ligne what the fuck
                resultat_attendu=$1
                
                #resultat=$(mvap "$expr" | xargs)
                
               # if [ "$resultat" = "$resultat_attendu" ]
                #then
                #echo "‚úÖ $expr = $resultat"
                #else
                #echo "‚ùå $expr = $resultat   (!= $resultat_attendu)"      
                #let "nb_tests_faux+=1"
                #fi
            }
            
            # ---------------- Code ----------------            
            nb_tests=0
            nb_tests_faux=0
            
            #---Test arithm√©tique
            while IFS= read line; do
                #echo $line, on affiche bien l'ensemble de la ligne il est o√π le probl√®me sa race de ses morts
                test($line) 42
            done < ./tests/test-arithm.txt

            echo
            echo "-------------------------------------------------------------------"
            echo "ü§µ $nb_tests tests ont √©t√© effectu√©s."  
            echo
            echo "‚úÖ Il y a $(( nb_tests - nb_tests_faux )) tests pass√©s avec succ√®s."  


            if (( $nb_tests_faux > 0 ))
            then
            echo "‚ùå Il y a $nb_tests_faux tests faux."  
            exit 42
            fi
            
      shell: bash
